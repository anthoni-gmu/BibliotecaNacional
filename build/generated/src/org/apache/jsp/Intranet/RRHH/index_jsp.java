package org.apache.jsp.Intranet.RRHH;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import servicio.UbigeoServicioImp;
import servicio.TipoServicioImp;
import servicio.UbigeoServicio;
import servicio.TipoServicio;
import java.util.*;
import com.google.gson.Gson;
import com.google.gson.JsonObject;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    Gson gsonObj = new Gson();
    Map<Object, Object> map = null;
    int totalVisitors = 883000;
    List<Map<Object, Object>> list = new ArrayList<Map<Object, Object>>();

    map = new HashMap<Object, Object>();
    map.put("y", 519960);
    map.put("name", "New Visitors");
    map.put("color", "#E7823A");
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("y", 363040);
    map.put("name", "Returning Visitors");
    map.put("color", "#546BC1");
    list.add(map);

    String newVsReturningVisitorsDataPoints = gsonObj.toJson(list);

    list = new ArrayList<Map<Object, Object>>();
    map = new HashMap<Object, Object>();
    map.put("x", 1420050600000L);
    map.put("y", 33000);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1422729000000L);
    map.put("y", 35960);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1425148200000L);
    map.put("y", 42160);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1427826600000L);
    map.put("y", 42240);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1430418600000L);
    map.put("y", 43200);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1433097000000L);
    map.put("y", 40600);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1435689000000L);
    map.put("y", 42560);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1438367400000L);
    map.put("y", 44280);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1441045800000L);
    map.put("y", 44800);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1443637800000L);
    map.put("y", 48720);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1446316200000L);
    map.put("y", 50840);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1448908200000L);
    map.put("y", 51600);
    list.add(map);

    String newVisitorsDataPoints = gsonObj.toJson(list);

    list = new ArrayList<Map<Object, Object>>();
    map = new HashMap<Object, Object>();
    map.put("x", 1420050600000L);
    map.put("y", 22000);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1422729000000L);
    map.put("y", 26040);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1425148200000L);
    map.put("y", 25840);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1427826600000L);
    map.put("y", 23760);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1430418600000L);
    map.put("y", 28800);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1433097000000L);
    map.put("y", 29400);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1435689000000L);
    map.put("y", 33440);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1438367400000L);
    map.put("y", 37720);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1441045800000L);
    map.put("y", 35200);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1443637800000L);
    map.put("y", 35280);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1446316200000L);
    map.put("y", 31160);
    list.add(map);
    map = new HashMap<Object, Object>();
    map.put("x", 1448908200000L);
    map.put("y", 34400);
    list.add(map);
    Object[] obj = (Object[]) session.getAttribute("filaBus");

    String returningVisitorsDataPoints = gsonObj.toJson(list);
    Object[] fila = {"", "", "", "", "", "", "", "", "", "", "", ""};
    if (obj != null) {
        fila = obj;
    }
    TipoServicio tipSer = new TipoServicioImp();
    UbigeoServicio ubiSer = new UbigeoServicioImp();
    List lisTip = tipSer.listar();
    List lisDep = ubiSer.listarDep();
    List lisPro = ubiSer.listarPro(fila[6].toString());
    List lisDis = ubiSer.listarDis(fila[6].toString(), fila[7].toString());

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE HTML>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("           <script src=\"../../js/ubigeo.js\"></script>\n");
      out.write("        <script src=\"../../js/ubigeo2.js\"></script>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            window.onload = function () {\n");
      out.write("\n");
      out.write("                var totalVisitors = ");
out.print(totalVisitors);
      out.write(";\n");
      out.write("                var visitorsData = {\n");
      out.write("                    \"New vs Returning Visitors\": [{\n");
      out.write("                            click: visitorsChartDrilldownHandler,\n");
      out.write("                            cursor: \"pointer\",\n");
      out.write("                            explodeOnClick: false,\n");
      out.write("                            innerRadius: \"75%\",\n");
      out.write("                            legendMarkerType: \"square\",\n");
      out.write("                            name: \"New vs Returning Visitors\",\n");
      out.write("                            radius: \"100%\",\n");
      out.write("                            showInLegend: true,\n");
      out.write("                            startAngle: 90,\n");
      out.write("                            type: \"doughnut\",\n");
      out.write("                            dataPoints: ");
out.print(newVsReturningVisitorsDataPoints);
      out.write("\n");
      out.write("                        }],\n");
      out.write("                    \"New Visitors\": [{\n");
      out.write("                            color: \"#E7823A\",\n");
      out.write("                            name: \"New Visitors\",\n");
      out.write("                            type: \"column\",\n");
      out.write("                            xValueType: \"dateTime\",\n");
      out.write("                            dataPoints: ");
out.print(newVisitorsDataPoints);
      out.write("\n");
      out.write("                        }],\n");
      out.write("                    \"Returning Visitors\": [{\n");
      out.write("                            color: \"#546BC1\",\n");
      out.write("                            name: \"Returning Visitors\",\n");
      out.write("                            type: \"column\",\n");
      out.write("                            xValueType: \"dateTime\",\n");
      out.write("                            dataPoints: ");
out.print(returningVisitorsDataPoints);
      out.write("\n");
      out.write("                        }]\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                var newVSReturningVisitorsOptions = {\n");
      out.write("                    animationEnabled: true,\n");
      out.write("                    theme: \"light2\",\n");
      out.write("                    title: {\n");
      out.write("                        text: \"New VS Returning Visitors\"\n");
      out.write("                    },\n");
      out.write("                    subtitles: [{\n");
      out.write("                            text: \"Click on Any Segment to Drilldown\",\n");
      out.write("                            backgroundColor: \"#2eacd1\",\n");
      out.write("                            fontSize: 16,\n");
      out.write("                            fontColor: \"white\",\n");
      out.write("                            padding: 5\n");
      out.write("                        }],\n");
      out.write("                    legend: {\n");
      out.write("                        fontFamily: \"calibri\",\n");
      out.write("                        fontSize: 14,\n");
      out.write("                        itemTextFormatter: function (e) {\n");
      out.write("                            return e.dataPoint.name + \": \" + Math.round(e.dataPoint.y / totalVisitors * 100) + \"%\";\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    data: []\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                var visitorsDrilldownedChartOptions = {\n");
      out.write("                    animationEnabled: true,\n");
      out.write("                    theme: \"light2\",\n");
      out.write("                    axisX: {\n");
      out.write("                        labelFontColor: \"#717171\",\n");
      out.write("                        lineColor: \"#a2a2a2\",\n");
      out.write("                        tickColor: \"#a2a2a2\"\n");
      out.write("                    },\n");
      out.write("                    axisY: {\n");
      out.write("                        gridThickness: 0,\n");
      out.write("                        includeZero: false,\n");
      out.write("                        labelFontColor: \"#717171\",\n");
      out.write("                        lineColor: \"#a2a2a2\",\n");
      out.write("                        tickColor: \"#a2a2a2\",\n");
      out.write("                        lineThickness: 1\n");
      out.write("                    },\n");
      out.write("                    data: []\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                var chart = new CanvasJS.Chart(\"chartContainer\", newVSReturningVisitorsOptions);\n");
      out.write("                chart.options.data = visitorsData[\"New vs Returning Visitors\"];\n");
      out.write("                chart.render();\n");
      out.write("\n");
      out.write("                function visitorsChartDrilldownHandler(e) {\n");
      out.write("                    chart = new CanvasJS.Chart(\"chartContainer\", visitorsDrilldownedChartOptions);\n");
      out.write("                    chart.options.data = visitorsData[e.dataPoint.name];\n");
      out.write("                    chart.options.title = {text: e.dataPoint.name}\n");
      out.write("                    chart.render();\n");
      out.write("                    $(\"#backButton\").toggleClass(\"invisible\");\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                $(\"#backButton\").click(function () {\n");
      out.write("                    $(this).toggleClass(\"invisible\");\n");
      out.write("                    chart = new CanvasJS.Chart(\"chartContainer\", newVSReturningVisitorsOptions);\n");
      out.write("                    chart.options.data = visitorsData[\"New vs Returning Visitors\"];\n");
      out.write("                    chart.render();\n");
      out.write("                });\n");
      out.write("\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("        <style>\n");
      out.write("            #backButton {\n");
      out.write("                border-radius: 4px;\n");
      out.write("                padding: 8px;\n");
      out.write("                border: none;\n");
      out.write("                font-size: 16px;\n");
      out.write("                background-color: #2eacd1;\n");
      out.write("                color: white;\n");
      out.write("                position: absolute;\n");
      out.write("                top: 10px;\n");
      out.write("                right: 10px;\n");
      out.write("                cursor: pointer;\n");
      out.write("            }\n");
      out.write("            .invisible {\n");
      out.write("                display: none;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"../../css/style.css\">\n");
      out.write("        <script src=\"https://kit.fontawesome.com/50872a9b90.js\" crossorigin=\"anonymous\"></script>\n");
      out.write("        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4\" crossorigin=\"anonymous\"></script>\n");
      out.write("        <title>Biblioteca</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <main class=\"container-fluid p-0\">\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Admin/navAdmin.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("            ");
 Object[] inicio = (Object[]) session.getAttribute("filaInicio");
      out.write("\n");
      out.write("            <div class=\"d-flex\" style=\"height: 94vh\">\n");
      out.write("\n");
      out.write("                <div class=\"col-8 m-auto \">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-12 my-3 shadow d-flex bg-secondary justify-content-center\">\n");
      out.write("                            <ul class=\"mb-lg-0\">\n");
      out.write("                                <div class=\"p-3 bg-secondary bg-gradient\">\n");
      out.write("                                    <h1 class=\"text-light h4 text-uppercase\"><i class=\"fas fa-user-tie\"></i> Cargo: ");
      out.print( inicio[2]);
      out.write("</h1>\n");
      out.write("                                </div>\n");
      out.write("                            </ul>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-12 shadow p-3 bg-body rounded \">\n");
      out.write("                            <div id=\"chartContainer\" style=\"height: 370px; width: 100%;\"></div>\n");
      out.write("                            <button class=\"btn invisible\" id=\"backButton\">&lt; Back</button>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-12 shadow p-3 bg-body rounded my-5 d-flex justify-content-center\">\n");
      out.write("                            <div class=\"card\" >\n");
      out.write("                                <div class=\"card-body\">\n");
      out.write("                                    <div class=\"alert alert-secondary fw-bold text-center h4\" role=\"alert\">\n");
      out.write("                                        100 Empleados\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"card\">\n");
      out.write("                                <div class=\"card-body\">\n");
      out.write("                                    <!-- Button trigger modal -->\n");
      out.write("                                    <button type=\"button\" class=\" alert alert-secondary fw-bold text-center h4\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n");
      out.write("                                        Registrar Empleado\n");
      out.write("                                    </button>\n");
      out.write("\n");
      out.write("                                    <!-- Modal -->\n");
      out.write("                                    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n");
      out.write("                                        <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n");
      out.write("                                            <div class=\"modal-content\">\n");
      out.write("                                                <form action=\"../../EmpleadoControl\" method=\"post\" class=\"d-flex flex-column align-items-center\">\n");
      out.write("\n");
      out.write("                                                    <div class=\"modal-header\">\n");
      out.write("                                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Registrar Empleado</h5>\n");
      out.write("                                                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("                                                    </div>\n");
      out.write("\n");
      out.write("                                                    <div class=\"modal-body\">\n");
      out.write("                                                        <div class=\"row px-3\">\n");
      out.write("                                                            <div class=\"col-6 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Nombre</span>\n");
      out.write("                                                                <input type=\"text\" required class=\"form-control\" name=\"Nombre\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing\">\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-6 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Apellidos</span>\n");
      out.write("                                                                <input type=\"text\" required class=\"form-control\" name=\"Apellidos\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing\">\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-6 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Dni</span>\n");
      out.write("                                                                <input type=\"text\" required class=\"form-control\" name=\"Dni\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing\" maxlength=\"8\" onkeyup=\"this.value = Numeros(this.value)\">\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-6 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Telefono</span>\n");
      out.write("                                                                <input type=\"text\" required class=\"form-control\" name=\"Telefono\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing\" maxlength=\"9\" onkeyup=\"this.value = Numeros(this.value)\">\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-4 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Departamento</span>\n");
      out.write("                                                                <select class=\"form-select form-control\" onchange=\"cambia()\" aria-label=\"Default select example\" name=\"selectDepartamento\" required>\n");
      out.write("                                                                    <option value=\"\">Seleccione</option>\n");
      out.write("                                                                    ");
 for (int i = 1; i < lisDep.size(); i++) { 
      out.write("\n");
      out.write("                                                                    ");
 Object[] dep = (Object[]) lisDep.get(i); 
      out.write("\n");
      out.write("                                                                    ");
 String value = dep[0].toString().replace(" ", "_");
      out.write("\n");
      out.write("                                                                    <option value=\"");
      out.print( value);
      out.write('"');
      out.write('>');
      out.print( dep[0]);
      out.write("</option>\n");
      out.write("                                                                    ");
 } 
      out.write("\n");
      out.write("                                                                </select>\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-4 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Provincia</span>\n");
      out.write("                                                                <select class=\"form-select form-control\" aria-label=\"Default select example\" name=\"selectProvincia\" onchange=\"cambiaDistrito()\" required>\n");
      out.write("                                                                    <option>Seleccione la Provincia</option>\n");
      out.write("                                                                </select>\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-4 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Distrito</span>\n");
      out.write("                                                                <select class=\"form-select form-control\" aria-label=\"Default select example\" name=\"selectDistrito\" required>\n");
      out.write("                                                                    <option>Seleccione el Distrito</option>\n");
      out.write("                                                                </select>\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-12 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Direccion</span>\n");
      out.write("                                                                <input type=\"text\" required class=\"form-control\" name=\"Direccion\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing\">\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-6 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Fecha de Nacimiento</span>\n");
      out.write("                                                                <input type=\"date\" required class=\"form-control\" name=\"FechaNa\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing\" pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\">\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-6 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Tipo de usuario</span>\n");
      out.write("                                                                <select class=\"form-select form-control\" aria-label=\"Default select example\" name=\"tipo\" required>\n");
      out.write("                                                                    <option selected>Seleccione</option>\n");
      out.write("                                                                    ");
 for (int i = 1; i < lisTip.size(); i++) { 
      out.write("\n");
      out.write("                                                                    ");
 Object[] tip = (Object[]) lisTip.get(i);
      out.write("\n");
      out.write("                                                                    <option value=\"");
      out.print( tip[1]);
      out.write('"');
      out.write('>');
      out.print( tip[1]);
      out.write("</option>\n");
      out.write("                                                                    ");
 }
      out.write("\n");
      out.write("                                                                </select>\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-6 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text \" id=\"inputGroup-sizing-lg\">Usuario</span>\n");
      out.write("                                                                <input type=\"text\" required class=\"form-control\" name=\"usuario\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing\">\n");
      out.write("                                                            </div>\n");
      out.write("                                                            <div class=\"col-6 my-2\">\n");
      out.write("                                                                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">Constraseña</span>\n");
      out.write("                                                                <input type=\"password\" required class=\"form-control\" name=\"password\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing\">\n");
      out.write("                                                            </div>\n");
      out.write("                                                        </div>\n");
      out.write("                                                    </div>\n");
      out.write("                                                    <div class=\"modal-footer\">\n");
      out.write("                                                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\n");
      out.write("                                                        <input type=\"submit\" class=\"btn  btn-primary\" name=\"acc\" value=\"Registrar\">\n");
      out.write("\n");
      out.write("                                                    </div>\n");
      out.write("                                                </form>\n");
      out.write("\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <script src=\"https://canvasjs.com/assets/script/canvasjs.min.js\"></script>\n");
      out.write("        </main>\n");
      out.write("        <script src=\"https://canvasjs.com/assets/script/jquery-1.11.1.min.js\"></script>\n");
      out.write("        <script src=\"https://canvasjs.com/assets/script/canvasjs.min.js\"></script>\n");
      out.write("    </body>\n");
      out.write("</html>                                 ");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
